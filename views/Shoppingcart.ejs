<!DOCTYPE html>
<html lang="en">
<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>Shopping Cart</title>
    <style>
        /* Add your CSS styles here */
        .container {
            display: flex;
        }

        .customer-details {
            flex: 1;
            margin-right: 20px;
        }

        .cart-details {
            flex: 1;
        }

        .cart-item {
            display: flex;
            align-items: center;
            margin-bottom: 10px;
        }

        .cart-item img {
            width: 50px;
            height: 50px;
            margin-right: 10px;
        }
    </style>
</head>
<body>
    <header>
        <h1>Shopping Cart</h1>
    </header>
    <div class="container">
        <div class="customer-details">
            <h2>Customer Details</h2>
            <form id="customer-form">
                <label for="name">Name:</label>
                <input type="text" id="name" name="name" required><br><br>
                <label for="email">Email:</label>
                <input type="email" id="email" name="email" required><br><br>
                <label for="phone">Phone:</label>
                <input type="tel" id="phone" name="phone" required><br><br>
                <label for="address">Address:</label>
                <input id="address" name="address" required></textarea><br><br>
                <button type="submit">Submit</button>
            </form>
        </div>
        <div class="cart-details">
            <div id="cart-items">
                <!-- Cart items will be displayed here -->
            </div>
            <div id="total-price">
                <!-- Total price will be displayed here -->
            </div>
            <button onclick="checkout()">Checkout</button>
        </div>
    </div>

    <script>
        // JavaScript code remains the same
        // Retrieve items from localStorage or initialize an empty array
        var shoppingCart = JSON.parse(localStorage.getItem('shoppingCart')) || [];
        
        // Function to update the cart view
        function updateCartView() {
            var cartItemsDiv = document.getElementById('cart-items');
            var totalPriceDiv = document.getElementById('total-price');
            var totalPrice = 0;
        
            // Clear previous items
            cartItemsDiv.innerHTML = '';
        
            // Display items in the cart
            if (shoppingCart.length > 0) {
                // Create a map to store unique items
                var uniqueItemsMap = new Map();
        
                // Loop through shoppingCart to populate uniqueItemsMap
                shoppingCart.forEach(function(item) {
                    if (uniqueItemsMap.has(item.name)) {
                        // If item already exists, increase quantity
                        uniqueItemsMap.get(item.name).quantity++;
                    } else {
                        // If item is new, add it to the map
                        uniqueItemsMap.set(item.name, { ...item, quantity: 1 });
                    }
                });
        
                // Iterate over unique items in the map
                uniqueItemsMap.forEach(function(item) {
                    var itemDiv = document.createElement('div');
                    itemDiv.classList.add('cart-item');
                    itemDiv.innerHTML = `
                        <img src="${item.image}" alt="${item.name}">
                        <div>
                            <p>${item.name} (Quantity: ${item.quantity})</p>
                            <p>$${(item.price * item.quantity).toFixed(2)}</p>
                            <button onclick="removeItem('${item.name}')">Remove</button>
                        </div>
                    `;
                    cartItemsDiv.appendChild(itemDiv);
                    totalPrice += item.price * item.quantity;
                });
            } else {
                cartItemsDiv.innerHTML = '<p>No items in the cart</p>';
            }
        
            // Display total price
            totalPriceDiv.textContent = `Total: $${totalPrice.toFixed(2)}`;
        }
        
        updateCartView(); // Update cart view on page load
        
        // Function to add an item to the cart
        function addToCart(productName, productPrice, productImage) {
            shoppingCart.push({ name: productName, price: parseInt(productPrice), image: productImage });
        
            // Save updated cart to localStorage
            localStorage.setItem('shoppingCart', JSON.stringify(shoppingCart));
        
            // Update cart view
            updateCartView();
        
            alert(productName + " added to cart!");
        }
        
        // Function to remove an item from the cart
        function removeItem(name) {
            shoppingCart = shoppingCart.filter(item => item.name !== name);
        
            // Save updated cart to localStorage
            localStorage.setItem('shoppingCart', JSON.stringify(shoppingCart));
        
            // Update cart view
            updateCartView();
        }
        
        // Function to proceed to checkout (You can implement this according to your requirements)
        function checkout() {
            // Implement your checkout process here
            alert('Redirecting to checkout page...');
            // Example: window.location.href = '/checkout';
        }
    </script>
</body>
</html>
